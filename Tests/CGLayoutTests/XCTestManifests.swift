#if !canImport(ObjectiveC)
import XCTest

extension Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Tests = [
        ("testAnchorBottomAlign", testAnchorBottomAlign),
        ("testAnchorBottomLimit", testAnchorBottomLimit),
        ("testAnchorBottomPull", testAnchorBottomPull),
        ("testAnchorLeftAlign", testAnchorLeftAlign),
        ("testAnchorLeftLimit", testAnchorLeftLimit),
        ("testAnchorLeftPull", testAnchorLeftPull),
        ("testAnchorRightAlign", testAnchorRightAlign),
        ("testAnchorRightLimit", testAnchorRightLimit),
        ("testAnchorRightPull", testAnchorRightPull),
        ("testAnchorTopAlign", testAnchorTopAlign),
        ("testAnchorTopLimit", testAnchorTopLimit),
        ("testAnchorTopPull", testAnchorTopPull),
        ("testApplyingSnapshotEqualLayoutDirectly", testApplyingSnapshotEqualLayoutDirectly),
        ("testBottomAlignment", testBottomAlignment),
        ("testBottomAlignmentWithMultiplier", testBottomAlignmentWithMultiplier),
        ("testBottomAlignmentWithOffset", testBottomAlignmentWithOffset),
        ("testBottomAlignmentWithSpace", testBottomAlignmentWithSpace),
        ("testCenterToCenterAnchor", testCenterToCenterAnchor),
        ("testCenterToOriginAnchor", testCenterToOriginAnchor),
        ("testCoordinateSpacePointLayoutGuide", testCoordinateSpacePointLayoutGuide),
        ("testCurrentSnapshotEqualLayoutDirectly", testCurrentSnapshotEqualLayoutDirectly),
        ("testFillingBetween", testFillingBetween),
        ("testFillingBoxed", testFillingBoxed),
        ("testFillingFixed", testFillingFixed),
        ("testFillingFrom", testFillingFrom),
        ("testFillingScaled", testFillingScaled),
        ("testFillingUpTo", testFillingUpTo),
        ("testHeightAnchor", testHeightAnchor),
        ("testInsetAnchor", testInsetAnchor),
        ("testLayout", testLayout),
        ("testLayoutDistribution", testLayoutDistribution),
        ("testLayoutDistributionFunc1Performance", testLayoutDistributionFunc1Performance),
        ("testLayoutDistributionFunc2Performance", testLayoutDistributionFunc2Performance),
        ("testLayoutWorkspaceAfterLeadingAlign", testLayoutWorkspaceAfterLeadingAlign),
        ("testLayoutWorkspaceAfterTrailingAlign", testLayoutWorkspaceAfterTrailingAlign),
        ("testLayoutWorkspaceBeforeLeadingAlign", testLayoutWorkspaceBeforeLeadingAlign),
        ("testLayoutWorkspaceBeforeTrailingAlign", testLayoutWorkspaceBeforeTrailingAlign),
        ("testLazyFilter", testLazyFilter),
        ("testLeftAlignment", testLeftAlignment),
        ("testLeftAlignmentWithMultiplier", testLeftAlignmentWithMultiplier),
        ("testLeftAlignmentWithOffset", testLeftAlignmentWithOffset),
        ("testLeftAlignmentWithSpace", testLeftAlignmentWithSpace),
        ("testPerformanceLayout", testPerformanceLayout),
        ("testRightAlignment", testRightAlignment),
        ("testRightAlignmentWithMultiplier", testRightAlignmentWithMultiplier),
        ("testRightAlignmentWithOffset", testRightAlignmentWithOffset),
        ("testRightAlignmentWithSpace", testRightAlignmentWithSpace),
        ("testSnapshotEqualLayoutDirectly", testSnapshotEqualLayoutDirectly),
        ("testStackLayoutScheme", testStackLayoutScheme),
        ("testTopAlignment", testTopAlignment),
        ("testTopAlignmentWithMultiplier", testTopAlignmentWithMultiplier),
        ("testTopAlignmentWithOffset", testTopAlignmentWithOffset),
        ("testTopAlignmentWithSpace", testTopAlignmentWithSpace),
        ("testWidthAnchor", testWidthAnchor),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(Tests.__allTests__Tests),
    ]
}
#endif
